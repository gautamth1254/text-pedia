{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","role","placeholder","onClick","toggleMode","value","htmlfor","Textform","useState","text","setText","style","color","heading","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","newText1","length","defaultProps","aboutus","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","setInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.04246083.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport default function Navbar(props){\n        return(\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n  <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul className=\"navbar-nav mr-auto\">\n      <li className=\"nav-item active\">\n        <a className=\"nav-link\" href=\"/\">Home</a>\n      </li>\n      {/* <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/about\">{props.aboutus}</Link>\n      </li> */}\n      <li className=\"nav-item dropdown\">\n        <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n          Dropdown\n        </a>\n        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n          <a className=\"dropdown-item\" href=\"/\">Action</a>\n          <a className=\"dropdown-item\" href=\"/\">Another action</a>\n          <div className=\"dropdown-divider\"></div>\n          <a className=\"dropdown-item\" href=\"/\">Something else here</a>\n        </div>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link disabled\" href=\"/\">Disabled</a>\n      </li>\n    </ul>\n    <form className=\"form-inline my-2 my-lg-0\">\n      <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n      <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n    </form>\n    <div className={`form-check form-check-inline text-${props.mode==='light'?'dark':'light'}`}>\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"inlineCheckbox1\" value=\"option1\"/>\n  <label className=\"form-check-label\" htmlfor=\"inlineCheckbox1\">Dark Mode</label>\n   </div>\n  </div>\n</nav>\n\n)\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    aboutus: PropTypes.string.isRequired,\n}\n\nNavbar.defaultProps = {\n    title: 'set a title',\n    aboutus: 'set a about'\n} \n\n","import React, {useState} from 'react';\n\n\nexport default function Textform(props){\n    \n    const handleOnchange = (event) =>{\n        console.log(\"you enter in text area\");\n        \n        setText(event.target.value);\n    } \n\n    const OnclickUpper = () =>{\n       // console.log(\"the test is clicked\" + text);nice to hear\n        let newText = text.toUpperCase();\n        setText(newText)\n        props.showAlert(\"now text is in upper case\", \"success\");\n    }\n\n    const OnclickLower = () => {\n\n        //console.log(\"the test is clicked\" + text);\n        let newText = text.toLowerCase();\n        setText(newText)\n        props.showAlert(\"now text is in lower case\", \"success\");\n\n    }\n    const OnclickClear = () => {\n        \n        setText(\" \");\n    }\n\n\n    const handleCopy = () => {\n        console.log(\"i am copy\");\n        var text = document.getElementById(\"mybox\");\n        text.select();\n        navigator.clipboard.writeText(text.value);\n    }\n\n    const handlespecialChracter = () =>{\n        let newText = text.split(/[!@#$%^&*()+_,.+-]/);\n        let newText1 = text.split(/[ ]+/);        \n        setText(newText.join(\" \"));\n    }\n\n    const handleExtraspaces = () =>{\n        \n        let newText1 = text.split(/[ ]+/);        \n        setText(newText1.join(\" \"));\n\n    }\n    // const ChangeOnCount=() =>{\n    //     console.log(\"the count is\" + count);\n    // }\n     const [text, setText] = useState(\"Enter the text here\");\n    // //setText(\"new text\")\n    // //const [count, setCount] = useState(0);\n\n    // const OnclickCount = () =>{\n    //     let i = 0;\n    //     setCount(i++);\n\n    // }\n\n    \n\n    return(\n        <>\n        <div style={{color: props.mode==='dark'?'white':'black'}}>\n            <h1>{props.heading}</h1>\n            <div className=\"mb-3\">\n            <textarea className=\"form-control\" value={text} onChange={handleOnchange} style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'grey'}} id=\"mybox\" rows=\"8\"></textarea>\n            </div>\n            <button className=\"btn btn-primary mx-2\" onClick={OnclickUpper}>Convert to uppercase</button>\n            <button className=\"btn btn-primary mx-2\" onClick={OnclickLower}>Convert to Lowercase</button>\n            <button className=\"btn btn-primary mx-2\" onClick={OnclickClear}>Clear</button>\n            <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy text</button>\n            <button className=\"btn btn-primary mx-2\" onClick={handlespecialChracter}>Remove special character</button>\n            <button className=\"btn btn-primary mx-2\" onClick={handleExtraspaces}>Remove Extra Spaces</button>\n\n        </div>\n        <div style={{color: props.mode==='dark'?'white':'black'}}>\n            <p>the text is {text.length} and the word is {text.split(\" \").length}\n            </p>\n            <p>{0.008 * text.split(\" \").length} Minute read</p>\n            \n            <h3>Preview</h3>\n            <p>{text.length>0?text:'Enter something to preview here'}</p>\n               \n        </div>\n        </>\n\n    )\n}","import React from 'react'\n\nfunction Alert(props) {\n\n    const capitalize = (word)=>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n    return (\n       \n          props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n               <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\n            \n        </div>\n        \n    )\n}\n\nexport default Alert\n","\nimport './App.css';\nimport './first.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch\n} from \"react-router-dom\";\nimport { Routes ,Route } from 'react-router-dom';\n\n\nfunction App() {\n  const [mode,setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  \n  const showAlert = (message, type) => {\n        setAlert({\n          msg: message,\n          type: type\n        })\n        setTimeout(() =>{\n          setAlert(null);\n        },2000);\n  }\n  const toggleMode = () =>{\n    if(mode === 'light'){\n      setMode('dark');      \n      document.body.style.backgroundColor = '#9430b3';\n      showAlert(\"Dark mode is enabled\", \"success\");\n     document.title = 'Textutils -Darkmode';\n     setInterval(() => {\n      document.title = 'Textutils is amazing';\n     }, 2000);\n     setInterval(() => {\n      document.title = 'Install Textutils now';\n     }, 1500);\n    }\n    else{\n      setMode('light');      \n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode is enabled\", \"success\");\n      document.title = 'Textutils -Lightmode';\n\n    }\n  }\n  \n\n\n  \n  return (\n       <>\n       \n       {/* <Router> */}\n       <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n       <Alert alert={alert}/>\n       \n       <div className=\"container my-3\">\n       {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n          \n          {/* <Route exact path=\"/\"> */}\n          <Textform showAlert={showAlert} heading=\"Enter the text you want\" mode={mode} />\n\n          {/* </Route>\n        </Switch>         */}\n       </div>       \n       \n       {/* </Router> */}\n       </>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}